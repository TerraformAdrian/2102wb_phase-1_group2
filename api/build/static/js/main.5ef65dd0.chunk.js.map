{"version":3,"sources":["reportWebVitals.js","hooks/use-current-user.hook.js","pages/root.page.js","global/constants.js","flow/script.get-account-items.js","hooks/use-account-items.hook.js","pages/publish.page.js","flow/util/batch.js","flow/script.get-account-item.js","hooks/use-account-item.hook.js","comps/account-item.js","comps/account-items.js","pages/list.page.js","pages/not-found.page.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","currentUser","atom","key","default","addr","loggedIn","cid","tools","logIn","fcl","logOut","signUp","changeUser","useCurrentUser","useRecoilState","user","setUser","useEffect","subscribe","Page","to","onClick","IDLE","PROCESSING","CODE","fetchAccountItems","address","Promise","resolve","Address","d","sort","a","b","$state","atomFamily","selectorFamily","get","$status","useAccountItems","items","setItems","status","setStatus","ids","mint","recipient","name","imageUrl","color","info","quantity","fetch","process","method","headers","body","JSON","stringify","tokenURI","refresh","useState","txtAddress","txtName","txtImageURL","txtColor","txtInfo","txtQuantity","state","setState","console","log","handleChange","e","target","value","className","htmlFor","id","onChange","preventDefault","disabled","length","callback","SET_CALLBACK","PROCESS","MAYBE_PROCESS","TIMEOUT","ENQUEUE","RESOLVE","HANDLERS","INIT","ctx","put","Set","setInterval","sendSelf","letter","args","uid","hold","reply","update","n","add","h","size","need","p","reduce","acc","result","_","results","have","Object","keys","delete","collate","px","push","addresses","t","map","Number","spawn","send","enqueue","expectReply","timeout","fetchAccountItem","expand","split","AccountItemCluster","item","cu","join","comp","setItem","owned","sansPrefix","useAccountItem","itemID","WrappedAccountItemCluster","props","fallback","AccountItemsCluster","WrappedAccountItemsCluster","setAddress","count","setCount","useHistory","window","ReactDOM","render","StrictMode","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.5ef65dd0.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {useEffect} from \"react\"\r\nimport {atom, useRecoilState} from \"recoil\"\r\nimport * as fcl from \"@onflow/fcl\"\r\n\r\nexport const currentUser = atom({\r\n  key: \"CURRENT_USER\",\r\n  default: {addr: null, loggedIn: null, cid: null},\r\n})\r\n\r\nconst tools = {\r\n  logIn: fcl.logIn,\r\n  logOut: fcl.unauthenticate,\r\n  signUp: fcl.signUp,\r\n  changeUser: fcl.reauthenticate,\r\n}\r\n\r\nexport function useCurrentUser() {\r\n  const [user, setUser] = useRecoilState(currentUser)\r\n  useEffect(() => fcl.currentUser().subscribe(setUser), [setUser])\r\n  return [user, user.addr != null, tools]\r\n}\r\n","\r\nimport {useCurrentUser} from \"../hooks/use-current-user.hook\"\r\nimport {Redirect} from \"react-router-dom\"\r\n\r\nexport function Page() {\r\n  const [user, loggedIn, {signUp, logIn}] = useCurrentUser()\r\n\r\n  if (loggedIn) return <Redirect to={\"/publish\"} />\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={logIn}>\r\n        Log In\r\n      </button>\r\n      <button onClick={signUp}>\r\n        Sign up\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n","export const LOADING = \"LOADING\"\r\n\r\n// Exposed states of a Flow Transaction\r\nexport const IDLE = \"IDLE\"\r\nexport const PROCESSING = \"PROCESSING\"\r\nexport const SUCCESS = \"SUCCESS\"\r\nexport const ERROR = \"ERROR\"\r\n\r\n// How long to pause on a success or error message\r\n// before transitioning back to an IDLE state.\r\nexport const IDLE_DELAY = 1000\r\n","import * as fcl from \"@onflow/fcl\"\r\nimport {Address} from \"@onflow/types\"\r\n\r\nconst CODE = fcl.cdc`\r\n  import NonFungibleToken from 0xab5876435fbf2063\r\n  import HandyItems from 0xab5876435fbf2063\r\n\r\n  pub fun main(address: Address): [UInt64] {\r\n    if let collection =  getAccount(address).getCapability<&HandyItems.Collection{NonFungibleToken.CollectionPublic, HandyItems.HandyItemsCollectionPublic}>(HandyItems.CollectionPublicPath).borrow() {\r\n      return collection.getIDs()\r\n    }\r\n\r\n    return []\r\n  }\r\n`\r\n\r\nexport function fetchAccountItems(address) {\r\n  if (address == null) return Promise.resolve([])\r\n\r\n  // prettier-ignore\r\n  return fcl.send([\r\n    fcl.script(CODE),\r\n    fcl.args([\r\n      fcl.arg(address, Address)\r\n    ]),\r\n  ]).then(fcl.decode).then(d => d.sort((a, b) => a - b))\r\n}\r\n","import {atomFamily, selectorFamily, useRecoilState} from \"recoil\"\r\nimport {fetchAccountItems} from \"../flow/script.get-account-items\"\r\nimport {IDLE, PROCESSING} from \"../global/constants\"\r\n\r\nexport const $state = atomFamily({\r\n  key: \"account-items::state\",\r\n  default: selectorFamily({\r\n    key: \"account-items::default\",\r\n    get: address => async () => fetchAccountItems(address),\r\n  }),\r\n})\r\n\r\nexport const $status = atomFamily({\r\n  key: \"account-items::status\",\r\n  default: IDLE,\r\n})\r\n\r\nexport function useAccountItems(address) {\r\n  const [items, setItems] = useRecoilState($state(address))\r\n  const [status, setStatus] = useRecoilState($status(address))\r\n\r\n  return {\r\n    ids: items,\r\n    status,\r\n\r\n    async mint(recipient, name, \r\n      imageUrl, color, info, quantity) {\r\n      setStatus(PROCESSING)\r\n      await fetch(process.env.REACT_APP_API_ITEM_MINT, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          recipient: recipient,\r\n          name: name,\r\n          tokenURI: imageUrl,\r\n          color: color,\r\n          info: info,\r\n          quantity: quantity,\r\n        }),\r\n      })\r\n      await fetchAccountItems(recipient).then(setItems)\r\n      setStatus(IDLE)\r\n    },\r\n    async refresh() {\r\n      setStatus(PROCESSING)\r\n      await fetchAccountItems(address).then(setItems)\r\n      setStatus(IDLE)\r\n    },\r\n  }\r\n}\r\n","\r\nimport {IDLE} from \"../global/constants\"\r\nimport {useCurrentUser} from \"../hooks/use-current-user.hook\"\r\nimport {useAccountItems} from \"../hooks/use-account-items.hook\"\r\nimport {Suspense, useState} from \"react\"\r\nimport {Redirect, useHistory} from \"react-router-dom\"\r\n\r\nimport './publish.css'\r\n\r\nexport function Page() {\r\n  const [state, setState] = useState({\r\n    txtAddress: \"\",\r\n    txtName: \"\",\r\n    txtImageURL: \"\", \r\n    txtColor: \"\",\r\n    txtInfo: \"\",\r\n    txtQuantity: \"\"\r\n  })\r\n  // const history = useHistory();\r\n  const [user] = useCurrentUser()\r\n\r\n  // if (user.addr == null) return <Redirect to={\"/\"} />\r\n  const items = useAccountItems(user.addr)\r\n\r\n  console.log(user);\r\n\r\n  const handleInit = (e) => {\r\n    e.preventDefault();\r\n\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setState({\r\n      ...state, \r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    items.mint(\r\n      state.txtAddress, \r\n      state.txtName, \r\n      state.txtImageURL, \r\n      state.txtColor, \r\n      state.txtInfo, \r\n      state.txtQuantity\r\n      )\r\n\r\n      console.log(items.ids.length);\r\n  }\r\n\r\n  return (\r\n    <div className=\"grid-center\">\r\n      <h1>{user.addr}</h1>\r\n      <h1>Publish a NFT</h1>\r\n      <form>\r\n        <div className=\"grid-container\">\r\n          <label htmlFor=\"txtName\">Name</label> \r\n          <input name=\"txtName\" id=\"txtName\" onChange={handleChange} />\r\n          <label htmlFor=\"txtAddress\">Address</label> \r\n          <input name=\"txtAddress\" id=\"txtAddress\" onChange={handleChange} />\r\n          <label>Image URL</label> \r\n          <input name=\"txtImageURL\" id=\"txtImageURL\" onChange={handleChange} />\r\n          <label>Color</label> \r\n          <input name=\"txtColor\" id=\"txtColor\" onChange={handleChange} />\r\n          <label>Info</label> \r\n          <input name=\"txtInfo\" id=\"txtInfo\" onChange={handleChange} />\r\n          <label>Quantity</label> \r\n          <input name=\"txtQuantity\" id=\"txtQuantity\" onChange={handleChange} />\r\n          <label>Series</label> \r\n          <input name=\"txtSeries\" id=\"txtSeries\" onChange={handleChange} />\r\n          <button onClick={handleInit}>\r\n            \r\n          </button>\r\n          <button disabled={items.status !== IDLE} onClick={handleSubmit}>\r\n            Send\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","// TODO: MOVE TO @onflow/util-batch\r\nimport {spawn, send, INIT} from \"@onflow/util-actor\"\r\nimport {uid} from \"@onflow/util-uid\"\r\n\r\nconst TICK = 500\r\nconst BUFFER_SIZE = 10\r\n\r\nconst SET_CALLBACK = \"SET_CALLBACK\"\r\nconst PROCESS = \"PROCESS\"\r\nconst MAYBE_PROCESS = \"MAYBE_PROCESS\"\r\nconst TIMEOUT = \"TIMEOUT\"\r\nconst ENQUEUE = \"ENQUEUE\"\r\nconst RESOLVE = \"RESOLVE\"\r\n\r\nconst HANDLERS = {\r\n  [INIT]: ctx => {\r\n    ctx.put(\"need\", new Set())\r\n    ctx.put(\"processing\", new Set())\r\n    ctx.put(\"hold\", {})\r\n    setInterval(() => ctx.sendSelf(TIMEOUT), TICK)\r\n  },\r\n\r\n  [SET_CALLBACK]: (ctx, letter, callback) => {\r\n    ctx.put(\"callback\", async (...args) => callback(...args))\r\n    ctx.sendSelf(MAYBE_PROCESS)\r\n  },\r\n\r\n  [ENQUEUE]: (ctx, letter, args) => {\r\n    const id = uid()\r\n    const hold = {id, args, reply: letter.reply}\r\n    ctx.update(\"need\", n => {\r\n      n.add(id)\r\n      return n\r\n    })\r\n    ctx.update(\"hold\", h => ({...h, [id]: hold}))\r\n    ctx.sendSelf(MAYBE_PROCESS)\r\n  },\r\n\r\n  [TIMEOUT]: ctx => {\r\n    if (ctx.get(\"need\").size) ctx.sendSelf(PROCESS)\r\n  },\r\n\r\n  [MAYBE_PROCESS]: ctx => {\r\n    if (ctx.get(\"need\") >= BUFFER_SIZE) ctx.sendSelf(PROCESS)\r\n  },\r\n\r\n  [PROCESS]: ctx => {\r\n    const callback = ctx.get(\"callback\")\r\n    if (typeof callback !== \"function\") return\r\n\r\n    const need = ctx.get(\"need\")\r\n    ctx.update(\"processing\", p => new Set([...p, ...need]))\r\n    ctx.put(\"need\", new Set())\r\n\r\n    const hold = ctx.get(\"hold\")\r\n    const payload = [...need].reduce(\r\n      (acc, key) => ({...acc, [key]: hold[key].args}),\r\n      {}\r\n    )\r\n\r\n    callback(payload).then(result => {\r\n      ctx.sendSelf(RESOLVE, result)\r\n    })\r\n  },\r\n  [RESOLVE]: (ctx, _, results) => {\r\n    const have = Object.keys(results)\r\n    for (let h of have) {\r\n      const hold = ctx.get(\"hold\")\r\n      hold[h].reply(results[h])\r\n      ctx.update(\"processing\", p => {\r\n        p.delete(h)\r\n        return p\r\n      })\r\n      ctx.update(\"hold\", hold => {\r\n        delete hold[h]\r\n        return hold\r\n      })\r\n    }\r\n  },\r\n}\r\n\r\nexport const batch = (name, callback) => {\r\n  spawn(HANDLERS, name)\r\n  send(name, SET_CALLBACK, callback)\r\n\r\n  return {\r\n    enqueue(...args) {\r\n      return send(name, ENQUEUE, args, {expectReply: true, timeout: 0})\r\n    },\r\n  }\r\n}\r\n","import * as fcl from \"@onflow/fcl\"\r\nimport * as t from \"@onflow/types\"\r\nimport {batch} from \"./util/batch\"\r\n\r\nconst CODE = fcl.cdc`\r\nimport NonFungibleToken from 0xab5876435fbf2063\r\nimport HandyItems from 0xab5876435fbf2063\r\n\r\npub struct AccountItem {\r\n  pub let itemID: UInt64\r\n  pub let name: String\r\n  pub let tokenURI: String\r\n  pub let color: String\r\n  pub let info: String\r\n  pub let owner: Address\r\n\r\n  init(itemID: UInt64, name: String, tokenURI: String, color: String, info: String, owner: Address) {\r\n    self.itemID = itemID\r\n    self.name = name\r\n    self.tokenURI = tokenURI\r\n    self.color = color\r\n    self.info = info\r\n    self.owner = owner\r\n  }\r\n}\r\n\r\npub fun fetch(address: Address, id: UInt64): AccountItem? {\r\n  if let col = getAccount(address).getCapability<&HandyItems.Collection{NonFungibleToken.CollectionPublic, HandyItems.HandyItemsCollectionPublic}>(HandyItems.CollectionPublicPath).borrow() {\r\n    if let item = col.borrowHandyItem(id: id) {\r\n      return AccountItem(itemID: id, name: item.name, tokenURI: item.tokenURI, \r\n        color: item.color, info: item.info, owner: address)\r\n    }\r\n  }\r\n\r\n  return nil\r\n}\r\n\r\npub fun main(keys: [String], addresses: [Address], ids: [UInt64]): {String: AccountItem?} {\r\n  let r: {String: AccountItem?} = {}\r\n  var i = 0\r\n  while i < keys.length {\r\n    let key = keys[i]\r\n    let address = addresses[i]\r\n    let id = ids[i]\r\n    r[key] = fetch(address: address, id: id)\r\n    i = i + 1\r\n  }\r\n  return r\r\n}\r\n`\r\n\r\nconst collate = px => {\r\n  return Object.keys(px).reduce(\r\n    (acc, key) => {\r\n      acc.keys.push(key)\r\n      acc.addresses.push(px[key][0])\r\n      acc.ids.push(px[key][1])\r\n      return acc\r\n    },\r\n    {keys: [], addresses: [], ids: []}\r\n  )\r\n}\r\n\r\nconst {enqueue} = batch(\"FETCH_ACCOUNT_ITEM\", async px => {\r\n  const {keys, addresses, ids} = collate(px)\r\n\r\n  return fcl\r\n    .send([\r\n      fcl.script(CODE),\r\n      fcl.args([\r\n        fcl.arg(keys, t.Array(t.String)),\r\n        fcl.arg(addresses, t.Array(t.Address)),\r\n        fcl.arg(ids.map(Number), t.Array(t.UInt64)),\r\n      ]),\r\n    ])\r\n    .then(fcl.decode)\r\n})\r\n\r\nexport async function fetchAccountItem(address, id) {\r\n  if (address == null) return Promise.resolve(null)\r\n  if (id == null) return Promise.resolve(null)\r\n  return enqueue(address, id)\r\n}\r\n","import {sansPrefix} from \"@onflow/fcl\"\r\nimport {atomFamily, selectorFamily, useRecoilState} from \"recoil\"\r\nimport {useCurrentUser} from \"../hooks/use-current-user.hook\"\r\nimport {fetchAccountItem} from \"../flow/script.get-account-item\"\r\nimport {IDLE, PROCESSING} from \"../global/constants\"\r\nimport {useAccountItems} from \"../hooks/use-account-items.hook\"\r\n\r\nfunction expand(key) {\r\n  return key.split(\"|\")\r\n}\r\n\r\nfunction comp(address, id) {\r\n  return [address, id].join(\"|\")\r\n}\r\n\r\nexport const $state = atomFamily({\r\n  key: \"account-item::state\",\r\n  default: selectorFamily({\r\n    key: \"account-item::default\",\r\n    get: key => async () => fetchAccountItem(...expand(key)),\r\n  }),\r\n})\r\n\r\nexport const $status = atomFamily({\r\n  key: \"account-item::status\",\r\n  default: IDLE,\r\n})\r\n\r\nexport function useAccountItem(address, id) {\r\n  const [cu] = useCurrentUser()\r\n  const accountItems = useAccountItems(address)\r\n  const key = comp(address, id)\r\n  const [item, setItem] = useRecoilState($state(key))\r\n  const [status, setStatus] = useRecoilState($status(key))\r\n\r\n  return {\r\n    ...item,\r\n    status,\r\n    owned: sansPrefix(cu.addr) === sansPrefix(address),\r\n    async refresh() {\r\n      setStatus(PROCESSING)\r\n      await fetchAccountItem(...expand(key)).then(setItem)\r\n      setStatus(IDLE)\r\n    },\r\n  }\r\n}\r\n","import React, {useEffect, useState, Suspense} from \"react\"\r\nimport {useAccountItem} from \"../hooks/use-account-item.hook\"\r\nimport {useCurrentUser} from \"../hooks/use-current-user.hook\"\r\nimport {IDLE} from \"../global/constants\"\r\n\r\nexport function AccountItemCluster({address, id}) {\r\n  const item = useAccountItem(address, id)\r\n\r\n  const BUSY = item.status !== IDLE\r\n\r\n  if (address == null) return null\r\n  if (id == null) return null\r\n \r\n  return (\r\n    <div className=\"grid-list\">\r\n      <h3>Handy#{item.itemID}</h3>\r\n\r\n      <p>{item.name}</p>\r\n      <p>{item.tokenURI}</p>\r\n      <p>{item.color}</p>\r\n      <p>{item.info}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default function WrappedAccountItemCluster(props) {\r\n  return (\r\n    <Suspense\r\n      fallback={\r\n        null\r\n      }\r\n    >\r\n      <AccountItemCluster {...props} />\r\n    </Suspense>\r\n  )\r\n}\r\n","import {Suspense} from \"react\"\r\nimport {useAccountItems} from \"../hooks/use-account-items.hook\"\r\nimport {useCurrentUser} from \"../hooks/use-current-user.hook\"\r\nimport Item from \"./account-item\"\r\n\r\nexport function AccountItemsCluster({address}) {\r\n  const items = useAccountItems(address)\r\n  const [cu] = useCurrentUser()\r\n\r\n  if (address == null) return null\r\n\r\n  if (items.ids.length <= 0)\r\n    return (\r\n      <p>No Items</p>\r\n    )\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"grid-list\">\r\n        <h2>ID</h2>\r\n        <h2>Name</h2>\r\n        <h2>Image URL</h2>\r\n        <h2>Color</h2>\r\n        <h2>Info</h2>\r\n      </div>\r\n      {items.ids.map(id => (\r\n        <Item key={id} id={id} address={address} />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default function WrappedAccountItemsCluster({address}) {\r\n  return (\r\n    <Suspense\r\n      fallback={\r\n        null\r\n      }\r\n    >\r\n      <AccountItemsCluster address={address} />\r\n    </Suspense>\r\n  )\r\n}\r\n","\r\nimport {IDLE} from \"../global/constants\"\r\nimport {useCurrentUser} from \"../hooks/use-current-user.hook\"\r\nimport {useAccountItems} from \"../hooks/use-account-items.hook\"\r\nimport {Suspense, useState} from \"react\"\r\nimport {Redirect, useHistory} from \"react-router-dom\"\r\nimport AccountItemsCluster from '../comps/account-items'\r\n\r\nimport './list.css'\r\n\r\nexport function Page() {\r\n  const [state, setState] = useState({\r\n    txtAddress: \"\"\r\n  })\r\n  const [address, setAddress] = useState(\"\");\r\n  const [count, setCount] = useState(0);\r\n  const history = useHistory();\r\n  const [user] = useCurrentUser()\r\n\r\n  // if (user.addr == null) return <Redirect to={\"/\"} />\r\n\r\n  const handleChange = (e) => {\r\n    setState({\r\n      ...state,\r\n      [e.target.name]: e.target.value,\r\n    })\r\n  }\r\n\r\n  const handleList = (e) => {\r\n    setAddress(state.txtAddress);\r\n    setCount(1 - count);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>NFT Listings</h1>\r\n\t    <div>\r\n        <label>Address: </label>\r\n        <input name=\"txtAddress\" id=\"txtAddress\" onChange={handleChange}/>\r\n        <button onClick={handleList}>List NFTs</button>\r\n        {\r\n          address != \"\" && <AccountItemsCluster address={address} />\r\n        }\r\n\t    </div>\r\n    </div>\r\n  )\r\n}\r\n","\r\nexport function Page() {\r\n  return <div>Page Not Found</div>\r\n}\r\n","import React, { Suspense } from 'react'\nimport ReactDOM from 'react-dom'\nimport {RecoilRoot} from \"recoil\"\nimport reportWebVitals from './reportWebVitals'\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\"\n\nimport {Page as Root} from \"./pages/root.page\"\nimport {Page as Publish} from \"./pages/publish.page\"\nimport {Page as List} from \"./pages/list.page\"\nimport {Page as NotFound} from \"./pages/not-found.page\"\n\nimport * as fcl from \"@onflow/fcl\"\nimport * as t from \"@onflow/types\"\n\nwindow.fcl = fcl\nwindow.t = t\n\nfcl\n  .config()\n  // .put(\"accessNode.api\", \"http://1a15-188-43-136-33.ngrok.io\")\n  .put(\"accessNode.api\", \"https://access-testnet.onflow.org\")\n  .put(\"discovery.wallet\", \"https://fcl-discovery.onflow.org/testnet/authn\");\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <Router>\n        <Switch>\n          <Route exact path=\"/publish\">\n            <Suspense fallback={null}>\n              <Publish />\n            </Suspense>\n          </Route>\n          <Route exact path=\"/list\">\n            <List />\n          </Route>\n          <Route exact path=\"/\">\n            <Root />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </Router>\n    </RecoilRoot>\n  </React.StrictMode>\n  ,\n  document.getElementById(\"root\")\n)\n\nreportWebVitals()"],"sourceRoot":""}